# Handles product data

# Sample structure:
# product = {
#     name: "Sample Product",
#     width: 10,
#     height: 5,
#     length: 20,
#     weight: 1.5,
#     color: "red",
#     brand: "Generic"
# }


class ProductHandler: 
	Attributes of initialized class:
		self.product_list = [] # Stores the product information

	Method function filter_products(input includes: price_range=[0, inf], width_range=[0, inf], height_range=[0, inf], legth_range=[0,inf], weight_range=[0, inf], color_of_product=None, brand_of_product=None):
		# The numerical inputs needs to have a specified range [minimum, maximum], the default for all is [0, inf (infinity)]
		# If the input is numerical, like width_range. Then width_range[0] pertains to the lower limit of the range (minimum) and width_range[1] pertains to the upper limit of the range (maximum)
		Set filtered_products = copy of self.product_list

		# Filtering by deduction
		for product in filtered_products:
			if product[“price”] is not within price_range:
				remove product from filtered_products
			if product[“width”] is not within width_range:
				remove product from filtered_products
			if product[“height”] is not within height_range:
				remove product from filtered_products
			if product[“length”] is not within length_range:
				remove product from filtered_products
			if product[“weight”] is not within weight_range:
				remove product from filtered_products
			if color_of_product is not None and product[“color”] is not equal to color_of_product:
				remove product from filtered_products
			if brand_of_product is not None and product[“brand”] is not equal to brand_of_product:
				remove product from filtered_products

		return filtered_products

